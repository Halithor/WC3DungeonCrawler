package HeroClass
import HeroAttrs

public let classWarrior = new WarriorClass()
public let classRanger = new RangerClass()
public let classWizard = new WizardClass()
public let classCleric = new ClericClass()
public let classFighter = new FighterClass()
public let classRogue = new RogueClass()
public let classMonk = new MonkClass()

public abstract class HeroClass
  string name

  construct(string name)
    this.name = name

  abstract function getAttributes() returns HeroAttributes

class WarriorClass extends HeroClass
  construct()
    super("Warrior")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(5, 0.5, 5, 0.5, 10, 1.0, 10, 20, 80)

class RangerClass extends HeroClass
  construct()
    super("Ranger")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(10, 1.0, 5, 0.5, 5, 0.5, 20, 20, 40)

class WizardClass extends HeroClass
  construct()
    super("Wizard")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(5, 0.5, 10, 1.0, 5, 0.5, 10, 40, 40)

class ClericClass extends HeroClass
  construct()
    super("Cleric")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(4, 0.4, 8, 0.8, 8, 0.8, 8, 32, 64)

class FighterClass extends HeroClass
  construct()
    super("Fighter")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(8, 0.8, 4, 0.4, 8, 0.8, 16, 16, 64)

class RogueClass extends HeroClass
  construct()
    super("Rogue")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(8, 0.8, 8, 0.8, 4, 0.4, 16, 32, 32)

class MonkClass extends HeroClass
  construct()
    super("Monk")

  override function getAttributes() returns HeroAttributes
    return new HeroAttributes(7, 0.7, 7, 0.7, 7, 0.7, 14, 28, 56)