package ItemGlobals

import ItemObjEditing
import Icons
import ChannelAbilityPreset
import AttributeSystem_Globals

constant ITEM_UID_GEN = new IdGenerator('0000')

public constant kIID_BasicNoEffect = compiletime(ITEM_ID_GEN.next())
public constant kIID_BasicSelfTarget = compiletime(ITEM_ID_GEN.next())

public constant string colorAttributeColor = "|cff3B97D3"
public constant string colorSubDetail = "|cffaaaaaa"
public constant string colorHightlight = "|cffffcc00"
public constant string colorFlavor = "|cff8888aa"

public constant validEquipmentAttributes = [
  // ATR_LIFE_MAX_FLAT,
  // ATR_LIFE_MAX_PERC,
  // ATR_LIFE_REGEN_FLAT,
  // ATR_LIFE_REGEN_PERC,
  // ATR_MANA_MAX_FLAT,
  // ATR_MANA_MAX_PERC,
  // ATR_MANA_REGEN_FLAT,
  ATR_ARMOR_FLAT,
  // ATR_ARMOR_PERC,
  // ATR_ATK_CD_PERC,
  ATR_ATK_DMG_FLAT,
  // ATR_ATK_DMG_PERC,
  // ATR_MOVESPEED_FLAT,
  // ATR_MOVESPEED_PERC,
  ATR_AGILITY_FLAT,
  ATR_STRENGTH_FLAT,
  ATR_INTELLIGENCE_FLAT
]

public enum ItemRarity
  Common
  Uncommon
  Rare
  Unique
  Legendary

public enum ItemType
  Equipment
  Active

public enum EquipmentType
  Weapon
  Offhand
  Feet
  Head
  Hands
  Body
  Accessory

public enum WeaponType
  Dagger
  Handaxe
  Hammer
  Mace
  Spear
  Shortbow
  LightCrossbow
  Rapier
  Battleaxe
  Shortsword
  Maul
  Greataxe
  Greatsword
  Warhammer
  Halbred
  Longbow
  HandCrossbow
  HeavyCrossbow
  Wand
  Staff

public enum WeaponClassification
  SimpleMelee
  SimpleRanged
  MartialMelee
  MartialRanged
  Magical

public enum WeaponHandRequirement
  OneHand
  TwoHand

public enum ActiveType
  // The active targets yourself.
  SelfTarget
  UnitTarget
  AllyTarget
  EnemyTarget
  AoETarget

public function ItemRarity.getColorString() returns string
  switch this
    case Common
      return ""
    case Uncommon
      return "|cff0066ff"
    case Rare
      return "|cff33cc33"
    case Unique
      return "|cffff9933"
    case Legendary
      return "|cffcc3399"
    default
      return ""

public function ItemRarity.getTintingColor() returns color
  switch this
    case Common
      return color(155, 0, 155)
    case Uncommon
      return color(0, 102, 204)
    case Rare
      return color(51, 204, 51)
    case Unique
      return color(255,153,51)
    case Legendary
      return color(204, 51, 153)
    default
      return color(255, 255, 255)

public function ItemRarity.toString() returns string
  switch this
    case Common
      return "Common"
    case Uncommon
      return "Uncommon"
    case Rare
      return "Rare"
    case Unique
      return "Unique"
    case Legendary
      return "Legendary"
    default
      return "DEFAULT RARITY"

public function EquipmentType.toString() returns string
  switch this
    case Weapon
      return "Weapon"
    case Offhand
      return "Offhand"
    case Feet
      return "Boots"
    case Head
      return "Helm"
    case Hands
      return "Gloves"
    case Body
      return "Body"
    case Accessory
      return "Accessory"
    default
      return "DEFAULT EQUIPMENT TYPE"

public function WeaponType.toString() returns string
  switch this
    case Dagger
      return "Dagger"
    case Handaxe
      return "Handaxe"
    case Hammer
      return "Hammer"
    case Mace
      return "Mace"
    case Spear
      return "Spear"
    case Shortbow
      return "Shortbow"
    case LightCrossbow
      return "Light Crossbow"
    case Rapier
      return "Rapier"
    case Battleaxe
      return "Battleaxe"
    case Shortsword
      return "Shortsword"
    case Maul
      return "Maul"
    case Greataxe
      return "Greataxe"
    case Greatsword
      return "Greatsword"
    case Warhammer
      return "Warhammer"
    case Halbred
      return "Halbred"
    case Longbow
      return "Longbow"
    case HandCrossbow
      return "Hand Crossbow"
    case HeavyCrossbow
      return "Heavy Crossbow"
    case Wand         
      return "Wand"
    case Staff
      return "Staff"
    default
      return "DEFAULT WEAPON TYPE"

public function WeaponClassification.toString() returns string
  switch this
    case SimpleMelee
      return "SM"
    case SimpleRanged
      return "SR"
    case MartialMelee
      return "MM"
    case MartialRanged
      return "MR"
    case Magical
      return "MAG"
    default
      return "DEFAULT CLASSIFICATION"

public function WeaponHandRequirement.toString() returns string
  switch this
    case OneHand
      return "1H"
    case TwoHand
      return "2H"
    default
      return "UNKNOWN HANDS"
    

public function WeaponType.getClassification() returns WeaponClassification
  switch this
    case Dagger
      return WeaponClassification.SimpleMelee
    case Handaxe
      return WeaponClassification.SimpleMelee
    case Hammer
      return WeaponClassification.SimpleMelee
    case Mace
      return WeaponClassification.SimpleMelee
    case Spear
      return WeaponClassification.SimpleMelee
    case Shortbow
      return WeaponClassification.SimpleRanged
    case LightCrossbow
      return WeaponClassification.SimpleRanged
    case Rapier
      return WeaponClassification.MartialMelee
    case Battleaxe
      return WeaponClassification.MartialMelee
    case Shortsword
      return WeaponClassification.MartialMelee
    case Maul
      return WeaponClassification.MartialMelee
    case Greataxe
      return WeaponClassification.MartialMelee
    case Greatsword
      return WeaponClassification.MartialMelee
    case Warhammer
      return WeaponClassification.MartialMelee
    case Halbred
      return WeaponClassification.MartialMelee
    case Longbow
      return WeaponClassification.MartialRanged
    case HandCrossbow
      return WeaponClassification.MartialRanged
    case HeavyCrossbow
      return WeaponClassification.MartialRanged
    case Wand
      return WeaponClassification.Magical
    case Staff
      return WeaponClassification.Magical
    default
      return WeaponClassification.SimpleMelee

public function WeaponType.getHandsRequirement() returns WeaponHandRequirement
  if this == WeaponType.Shortbow or
      this == WeaponType.LightCrossbow or
      this == WeaponType.Greataxe or
      this == WeaponType.Greatsword or
      this == WeaponType.Warhammer or
      this == WeaponType.Halbred or
      this == WeaponType.Longbow or
      this == WeaponType.HeavyCrossbow or
      this == WeaponType.Staff
    return WeaponHandRequirement.TwoHand
  return WeaponHandRequirement.OneHand    

@compiletime
function defineBasicItems()
  new ItemDefinition(kIID_BasicNoEffect, 'clsd')
    ..setAbilities("")
    ..setInterfaceIcon(Icons.bTNCheese)
    ..setIgnoreCooldown(true)
    ..setGoldCost(0)
    ..setIncludeAsRandomChoice(false)
    ..setName("Basic No Effect Item")
    ..setDescription("Basic No Effect Item")
    ..setHotkey("")
    ..setTooltipBasic("Do not purchase")
    ..setTooltipExtended("Basic item with no effect.")
  let selfTargetAID = ABIL_ID_GEN.next()
  new ChannelAbilityPreset(selfTargetAID, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetCooldown((int lvl) -> 0)
    ..presetTargetTypes(Targettype.NONE)
  new ItemDefinition(kIID_BasicSelfTarget, 'clsd')
    ..setAbilities(selfTargetAID.toRawCode())
    ..setActivelyUsed(true)
    ..setInterfaceIcon(Icons.bTNPotionGreenSmall)
    ..setIgnoreCooldown(true)
    ..setGoldCost(0)
    ..setIncludeAsRandomChoice(false)
    ..setName("Basic Self Target Item")
    ..setDescription("Basic Self Target Item")
    ..setHotkey("")
    ..setTooltipBasic("Do not purchase")
    ..setTooltipExtended("Basic item with self target spell.")
    